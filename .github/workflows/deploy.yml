name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: priyamchandra/my-dash-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy Docker image to EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DOCKER_KEY: ${{ secrets.DOCKER_KEY }}  # Use the secret here
        run: |
          echo "$DOCKER_KEY" > Docker_key.pem
          chmod 400 Docker_key.pem

          # SSH into the EC2 instance and deploy the Docker container
          ssh -i Docker_key.pem -o StrictHostKeyChecking=no ec2-user@16.171.41.101 << 'EOF'
            # Pull the latest Docker image
            docker pull priyamchandra/my-dash-app:latest
            
            # Stop and remove the existing container (if any)
            docker stop $(docker ps -qa)
            docker rm $(docker ps -qa)
            
            # Run the new Docker container and capture its ID
            CONTAINER_ID=$(docker run -d -p 8050:8050 priyamchandra/my-dash-app:latest)
            
            # Print the container ID for debugging (optional)
            echo "Deployed container ID: $CONTAINER_ID"
          EOF
